{"version":3,"sources":["components/FeedbackOptions/Feedback.styled.jsx","components/FeedbackOptions/Feedback.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Button","styled","button","FeedbackOptions","options","handleIncrement","map","option","type","onClick","toUpperCase","Container","div","Ul","ul","Li","li","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","NotificationMessage","p","Notification","message","MainContainer","App","useState","feedbacks","setFeedbacks","countTotalFeedback","Object","values","reduce","acc","feedback","Math","round","countPositiveFeedbackPercentage","totalFeedback","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAASC,IAAOC,OAAV,0K,OCEJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,eAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,UACG,IACAA,EAAOG,cAAe,MAFEH,MCJxB,I,EAAMI,EAAYV,IAAOW,IAAV,mDAITC,EAAKZ,IAAOa,GAAV,sHAOFC,EAAKd,IAAOe,GAAV,wFCRA,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,cAACX,EAAD,UACGU,EAAQ,GACP,eAACR,EAAD,WACE,eAACE,EAAD,oBAAWG,EAAX,OACA,eAACH,EAAD,uBAAcI,EAAd,OACA,eAACJ,EAAD,mBAAUK,EAAV,OACA,eAACL,EAAD,qBAAYM,EAAZ,OACA,eAACN,EAAD,iCAAwBO,EAAxB,aCnBH,I,EAAMC,EAAQtB,IAAOuB,GAAV,6GCEH,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5C,OACE,oCACE,cAACJ,EAAD,UAAQG,IACPC,KCNA,I,EAAMC,EAAsB3B,IAAO4B,EAAV,2CCEjB,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAsBG,ICFxB,IAAMC,EAAgB/B,IAAOW,IAAV,iGCKX,SAASqB,IACtB,MAAkCC,mBAAS,CAAEhB,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAAvE,mBAAOe,EAAP,KAAkBC,EAAlB,KASMC,EAAqB,WACzB,OAAOC,OAAOC,OAAOJ,GAAWK,QAC9B,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,IACzB,IASErB,EAAQgB,IACRf,EANkC,SAAAD,GAEtC,OADAA,EAAQgB,IACDM,KAAKC,MAAwB,IAAjBT,EAAUjB,KAAcG,GAIlBwB,CAAgCxB,GACrDyB,EAAgBzB,EAAQ,EAE9B,OACE,eAACW,EAAD,WACE,cAACP,EAAD,CAAcC,MAAM,wBAApB,SACE,cAAC,EAAD,CACEtB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5BgB,SAAAE,GACtB6B,GAAa,SAAAW,GAAS,kCACjBA,GADiB,kBAEnBxC,EAASwC,EAAUxC,GAAU,YA4B9B,eAACkB,EAAD,CAAcC,MAAM,aAApB,UACGoB,GACC,cAAC7B,EAAD,CACEC,KAAMiB,EAAUjB,KAChBC,QAASgB,EAAUhB,QACnBC,IAAKe,EAAUf,IACf0B,cAAeA,EACfzB,MAAOA,EACPC,mBAAoBA,KAItBwB,GAAiB,cAAChB,EAAD,CAAcC,QAAQ,4BChDjDiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.d1cd6e5e.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  margin-left: 8px;\n  padding: 4px 10px;\n  border-radius: 5px;\n  background-color: yellow;\n  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.5);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Feedback.styled';\n\nexport default function FeedbackOptions({ options, handleIncrement }) {\n  return options.map(option => (\n    <Button type=\"button\" key={option} onClick={() => handleIncrement(option)}>\n      {' '}\n      {option.toUpperCase()}{' '}\n    </Button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  handleIncrement: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 10px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n`;\n\nexport const Li = styled.li`\n  padding: 7px 15px;\n  font-size: 24px;\n  color: orange;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Statistics.styled';\nimport { Ul } from './Statistics.styled';\nimport { Li } from './Statistics.styled';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <Container>\n      {total > 0 && (\n        <Ul>\n          <Li>Good: {good} </Li>\n          <Li>Neutral: {neutral} </Li>\n          <Li>Bad: {bad} </Li>\n          <Li>Total: {total} </Li>\n          <Li>Positive Feedback: {positivePercentage}% </Li>\n        </Ul>\n      )}\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number,\n};\n","import styled from '@emotion/styled';\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 500;\n  color: green;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './SectionTitle.styled';\n\nexport default function SectionTitle({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const NotificationMessage = styled.p`\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { NotificationMessage } from './Notification.styled';\n\nexport default function Notification({ message }) {\n  return <NotificationMessage>{message}</NotificationMessage>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React, { useState } from 'react';\nimport Feedback from '../FeedbackOptions/Feedback';\nimport Statistics from '../Statistics/Statistics';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport Notification from '../Notification/Notification';\nimport { MainContainer } from './App.styled';\n\nexport default function App() {\n  const [feedbacks, setFeedbacks] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const handleIncrement = option => {\n    setFeedbacks(prevState => ({\n      ...prevState,\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(feedbacks).reduce(\n      (acc, feedback) => acc + feedback,\n      0,\n    );\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    total = countTotalFeedback();\n    return Math.round((feedbacks.good * 100) / total);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage(total);\n  const totalFeedback = total > 0;\n\n  return (\n    <MainContainer>\n      <SectionTitle title=\"Please leave feedback\">\n        <Feedback\n          options={['good', 'neutral', 'bad']}\n          handleIncrement={handleIncrement}\n        />\n      </SectionTitle>\n      <SectionTitle title=\"Statistics\">\n        {totalFeedback && (\n          <Statistics\n            good={feedbacks.good}\n            neutral={feedbacks.neutral}\n            bad={feedbacks.bad}\n            totalFeedback={totalFeedback}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n\n        {!totalFeedback && <Notification message=\"No feedback given\" />}\n      </SectionTitle>\n    </MainContainer>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}